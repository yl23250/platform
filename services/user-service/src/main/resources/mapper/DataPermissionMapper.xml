<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.biobt.user.mapper.DataPermissionMapper">

    <!-- 数据权限结果映射 -->
    <resultMap id="DataPermissionResultMap" type="com.biobt.user.domain.entity.DataPermission">
        <id column="id" property="id"/>
        <result column="tenant_id" property="tenantId"/>
        <result column="permission_name" property="permissionName"/>
        <result column="permission_type" property="permissionType"/>
        <result column="resource_type" property="resourceType"/>
        <result column="resource_id" property="resourceId"/>
        <result column="target_type" property="targetType"/>
        <result column="target_id" property="targetId"/>
        <result column="data_scope" property="dataScope"/>
        <result column="scope_config" property="scopeConfig"/>
        <result column="row_filter" property="rowFilter"/>
        <result column="column_filter" property="columnFilter"/>
        <result column="condition_sql" property="conditionSql"/>
        <result column="description" property="description"/>
        <result column="status" property="status"/>
        <result column="create_by" property="createBy"/>
        <result column="create_time" property="createTime"/>
        <result column="update_by" property="updateBy"/>
        <result column="update_time" property="updateTime"/>
        <result column="deleted" property="deleted"/>
    </resultMap>

    <!-- 基础查询条件 -->
    <sql id="BaseWhere">
        <where>
            <if test="tenantId != null">
                AND dp.tenant_id = #{tenantId}
            </if>
            <if test="permissionName != null and permissionName != ''">
                AND dp.permission_name LIKE CONCAT('%', #{permissionName}, '%')
            </if>
            <if test="permissionType != null">
                AND dp.permission_type = #{permissionType}
            </if>
            <if test="resourceType != null">
                AND dp.resource_type = #{resourceType}
            </if>
            <if test="resourceId != null">
                AND dp.resource_id = #{resourceId}
            </if>
            <if test="targetType != null">
                AND dp.target_type = #{targetType}
            </if>
            <if test="targetId != null">
                AND dp.target_id = #{targetId}
            </if>
            <if test="status != null">
                AND dp.status = #{status}
            </if>
            AND dp.deleted = 0
        </where>
    </sql>

    <!-- 分页查询数据权限 -->
    <select id="selectDataPermissionPage" resultMap="DataPermissionResultMap">
        SELECT * FROM sys_data_permission dp
        <include refid="BaseWhere"/>
        ORDER BY dp.create_time DESC
    </select>

    <!-- 查询用户行权限配置 -->
    <select id="selectUserRowPermissions" resultMap="DataPermissionResultMap">
        SELECT dp.* FROM sys_data_permission dp
        WHERE dp.target_type = 'USER'
        AND dp.target_id = #{userId}
        AND dp.permission_type = 'ROW'
        <if test="resourceType != null">
            AND dp.resource_type = #{resourceType}
        </if>
        <if test="resourceId != null">
            AND dp.resource_id = #{resourceId}
        </if>
        AND dp.status = 1
        AND dp.deleted = 0
        
        UNION ALL
        
        SELECT dp.* FROM sys_data_permission dp
        INNER JOIN sys_user_role ur ON dp.target_id = ur.role_id
        WHERE dp.target_type = 'ROLE'
        AND ur.user_id = #{userId}
        AND dp.permission_type = 'ROW'
        <if test="resourceType != null">
            AND dp.resource_type = #{resourceType}
        </if>
        <if test="resourceId != null">
            AND dp.resource_id = #{resourceId}
        </if>
        AND dp.status = 1
        AND dp.deleted = 0
        AND ur.deleted = 0
        
        ORDER BY create_time DESC
    </select>

    <!-- 查询用户列权限配置 -->
    <select id="selectUserColumnPermissions" resultMap="DataPermissionResultMap">
        SELECT dp.* FROM sys_data_permission dp
        WHERE dp.target_type = 'USER'
        AND dp.target_id = #{userId}
        AND dp.permission_type = 'COLUMN'
        <if test="resourceType != null">
            AND dp.resource_type = #{resourceType}
        </if>
        <if test="resourceId != null">
            AND dp.resource_id = #{resourceId}
        </if>
        AND dp.status = 1
        AND dp.deleted = 0
        
        UNION ALL
        
        SELECT dp.* FROM sys_data_permission dp
        INNER JOIN sys_user_role ur ON dp.target_id = ur.role_id
        WHERE dp.target_type = 'ROLE'
        AND ur.user_id = #{userId}
        AND dp.permission_type = 'COLUMN'
        <if test="resourceType != null">
            AND dp.resource_type = #{resourceType}
        </if>
        <if test="resourceId != null">
            AND dp.resource_id = #{resourceId}
        </if>
        AND dp.status = 1
        AND dp.deleted = 0
        AND ur.deleted = 0
        
        ORDER BY create_time DESC
    </select>

    <!-- 查询角色行权限配置 -->
    <select id="selectRoleRowPermissions" resultMap="DataPermissionResultMap">
        SELECT dp.* FROM sys_data_permission dp
        WHERE dp.target_type = 'ROLE'
        AND dp.target_id = #{roleId}
        AND dp.permission_type = 'ROW'
        <if test="resourceType != null">
            AND dp.resource_type = #{resourceType}
        </if>
        <if test="resourceId != null">
            AND dp.resource_id = #{resourceId}
        </if>
        AND dp.status = 1
        AND dp.deleted = 0
        ORDER BY dp.create_time DESC
    </select>

    <!-- 查询角色列权限配置 -->
    <select id="selectRoleColumnPermissions" resultMap="DataPermissionResultMap">
        SELECT dp.* FROM sys_data_permission dp
        WHERE dp.target_type = 'ROLE'
        AND dp.target_id = #{roleId}
        AND dp.permission_type = 'COLUMN'
        <if test="resourceType != null">
            AND dp.resource_type = #{resourceType}
        </if>
        <if test="resourceId != null">
            AND dp.resource_id = #{resourceId}
        </if>
        AND dp.status = 1
        AND dp.deleted = 0
        ORDER BY dp.create_time DESC
    </select>

    <!-- 检查用户数据权限 -->
    <select id="hasUserDataPermission" resultType="boolean">
        SELECT COUNT(1) > 0 FROM sys_data_permission dp
        WHERE (
            (dp.target_type = 'USER' AND dp.target_id = #{userId})
            OR
            (dp.target_type = 'ROLE' AND dp.target_id IN (
                SELECT ur.role_id FROM sys_user_role ur
                WHERE ur.user_id = #{userId} AND ur.deleted = 0
            ))
        )
        AND dp.resource_type = #{resourceType}
        <if test="resourceId != null">
            AND dp.resource_id = #{resourceId}
        </if>
        AND dp.permission_type = #{permissionType}
        AND dp.status = 1
        AND dp.deleted = 0
    </select>

    <!-- 检查角色数据权限 -->
    <select id="hasRoleDataPermission" resultType="boolean">
        SELECT COUNT(1) > 0 FROM sys_data_permission dp
        WHERE dp.target_type = 'ROLE'
        AND dp.target_id = #{roleId}
        AND dp.resource_type = #{resourceType}
        <if test="resourceId != null">
            AND dp.resource_id = #{resourceId}
        </if>
        AND dp.permission_type = #{permissionType}
        AND dp.status = 1
        AND dp.deleted = 0
    </select>

    <!-- 为用户分配数据权限 -->
    <insert id="assignDataPermissionToUser">
        INSERT INTO sys_data_permission (
            tenant_id, permission_name, permission_type, resource_type, resource_id,
            target_type, target_id, data_scope, scope_config, row_filter, column_filter,
            condition_sql, description, status, create_by, create_time
        ) VALUES (
            #{tenantId}, #{permissionName}, #{permissionType}, #{resourceType}, #{resourceId},
            'USER', #{userId}, #{dataScope}, #{scopeConfig}, #{rowFilter}, #{columnFilter},
            #{conditionSql}, #{description}, #{status}, #{createBy}, #{createTime}
        )
    </insert>

    <!-- 移除用户数据权限 -->
    <delete id="removeDataPermissionFromUser">
        DELETE FROM sys_data_permission
        WHERE target_type = 'USER'
        AND target_id = #{userId}
        AND resource_type = #{resourceType}
        <if test="resourceId != null">
            AND resource_id = #{resourceId}
        </if>
        AND permission_type = #{permissionType}
    </delete>

    <!-- 为角色分配数据权限 -->
    <insert id="assignDataPermissionToRole">
        INSERT INTO sys_data_permission (
            tenant_id, permission_name, permission_type, resource_type, resource_id,
            target_type, target_id, data_scope, scope_config, row_filter, column_filter,
            condition_sql, description, status, create_by, create_time
        ) VALUES (
            #{tenantId}, #{permissionName}, #{permissionType}, #{resourceType}, #{resourceId},
            'ROLE', #{roleId}, #{dataScope}, #{scopeConfig}, #{rowFilter}, #{columnFilter},
            #{conditionSql}, #{description}, #{status}, #{createBy}, #{createTime}
        )
    </insert>

    <!-- 移除角色数据权限 -->
    <delete id="removeDataPermissionFromRole">
        DELETE FROM sys_data_permission
        WHERE target_type = 'ROLE'
        AND target_id = #{roleId}
        AND resource_type = #{resourceType}
        <if test="resourceId != null">
            AND resource_id = #{resourceId}
        </if>
        AND permission_type = #{permissionType}
    </delete>

    <!-- 获取用户所有数据权限 -->
    <select id="getAllUserDataPermissions" resultMap="DataPermissionResultMap">
        SELECT dp.* FROM sys_data_permission dp
        WHERE dp.target_type = 'USER'
        AND dp.target_id = #{userId}
        AND dp.status = 1
        AND dp.deleted = 0
        
        UNION ALL
        
        SELECT dp.* FROM sys_data_permission dp
        INNER JOIN sys_user_role ur ON dp.target_id = ur.role_id
        WHERE dp.target_type = 'ROLE'
        AND ur.user_id = #{userId}
        AND dp.status = 1
        AND dp.deleted = 0
        AND ur.deleted = 0
        
        ORDER BY create_time DESC
    </select>

    <!-- 获取角色所有数据权限 -->
    <select id="getAllRoleDataPermissions" resultMap="DataPermissionResultMap">
        SELECT dp.* FROM sys_data_permission dp
        WHERE dp.target_type = 'ROLE'
        AND dp.target_id = #{roleId}
        AND dp.status = 1
        AND dp.deleted = 0
        ORDER BY dp.create_time DESC
    </select>

    <!-- 获取资源所有数据权限 -->
    <select id="getAllResourceDataPermissions" resultMap="DataPermissionResultMap">
        SELECT dp.* FROM sys_data_permission dp
        WHERE dp.resource_type = #{resourceType}
        <if test="resourceId != null">
            AND dp.resource_id = #{resourceId}
        </if>
        AND dp.status = 1
        AND dp.deleted = 0
        ORDER BY dp.create_time DESC
    </select>

    <!-- 批量启用数据权限 -->
    <update id="batchEnable">
        UPDATE sys_data_permission
        SET status = 1, update_by = #{updateBy}, update_time = NOW()
        WHERE id IN
        <foreach collection="permissionIds" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
        AND deleted = 0
    </update>

    <!-- 批量禁用数据权限 -->
    <update id="batchDisable">
        UPDATE sys_data_permission
        SET status = 0, update_by = #{updateBy}, update_time = NOW()
        WHERE id IN
        <foreach collection="permissionIds" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
        AND deleted = 0
    </update>

    <!-- 批量删除数据权限 -->
    <update id="batchDelete">
        UPDATE sys_data_permission
        SET deleted = 1, update_by = #{updateBy}, update_time = NOW()
        WHERE id IN
        <foreach collection="permissionIds" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
        AND deleted = 0
    </update>

    <!-- 构建SQL条件 -->
    <select id="buildSqlCondition" resultType="string">
        SELECT GROUP_CONCAT(DISTINCT dp.condition_sql SEPARATOR ' OR ') as sqlCondition
        FROM sys_data_permission dp
        WHERE (
            (dp.target_type = 'USER' AND dp.target_id = #{userId})
            OR
            (dp.target_type = 'ROLE' AND dp.target_id IN (
                SELECT ur.role_id FROM sys_user_role ur
                WHERE ur.user_id = #{userId} AND ur.deleted = 0
            ))
        )
        AND dp.resource_type = #{resourceType}
        <if test="resourceId != null">
            AND dp.resource_id = #{resourceId}
        </if>
        AND dp.permission_type = 'ROW'
        AND dp.condition_sql IS NOT NULL
        AND dp.condition_sql != ''
        AND dp.status = 1
        AND dp.deleted = 0
    </select>

    <!-- 验证数据权限配置 -->
    <select id="validateDataPermissionConfig" resultType="boolean">
        SELECT COUNT(1) > 0 FROM sys_data_permission dp
        WHERE dp.id = #{permissionId}
        AND (
            (dp.permission_type = 'ROW' AND dp.condition_sql IS NOT NULL AND dp.condition_sql != '')
            OR
            (dp.permission_type = 'COLUMN' AND dp.column_filter IS NOT NULL AND dp.column_filter != '')
        )
        AND dp.deleted = 0
    </select>

    <!-- 获取数据权限统计 -->
    <select id="getDataPermissionStatistics" resultType="map">
        SELECT 
            COUNT(1) as totalCount,
            COUNT(CASE WHEN status = 1 THEN 1 END) as enabledCount,
            COUNT(CASE WHEN status = 0 THEN 1 END) as disabledCount,
            COUNT(CASE WHEN permission_type = 'ROW' THEN 1 END) as rowPermissionCount,
            COUNT(CASE WHEN permission_type = 'COLUMN' THEN 1 END) as columnPermissionCount,
            COUNT(CASE WHEN target_type = 'USER' THEN 1 END) as userPermissionCount,
            COUNT(CASE WHEN target_type = 'ROLE' THEN 1 END) as rolePermissionCount
        FROM sys_data_permission dp
        WHERE dp.deleted = 0
        <if test="resourceType != null">
            AND dp.resource_type = #{resourceType}
        </if>
        <if test="resourceId != null">
            AND dp.resource_id = #{resourceId}
        </if>
    </select>

    <!-- 检查数据权限冲突 -->
    <select id="checkDataPermissionConflict" resultType="boolean">
        SELECT COUNT(1) > 1 FROM sys_data_permission dp
        WHERE dp.target_type = #{targetType}
        AND dp.target_id = #{targetId}
        AND dp.resource_type = #{resourceType}
        <if test="resourceId != null">
            AND dp.resource_id = #{resourceId}
        </if>
        AND dp.permission_type = #{permissionType}
        AND dp.status = 1
        AND dp.deleted = 0
        <if test="excludeId != null">
            AND dp.id != #{excludeId}
        </if>
    </select>

    <!-- 解析变量 -->
    <select id="parseVariables" resultType="map">
        SELECT 
            '${userId}' as userId,
            '${tenantId}' as tenantId,
            '${deptId}' as deptId,
            '${roleIds}' as roleIds,
            NOW() as currentTime,
            CURDATE() as currentDate
    </select>

    <!-- 获取用户数据范围 -->
    <select id="getUserDataScope" resultType="string">
        SELECT COALESCE(MAX(dp.data_scope), 'NONE') as dataScope
        FROM sys_data_permission dp
        WHERE (
            (dp.target_type = 'USER' AND dp.target_id = #{userId})
            OR
            (dp.target_type = 'ROLE' AND dp.target_id IN (
                SELECT ur.role_id FROM sys_user_role ur
                WHERE ur.user_id = #{userId} AND ur.deleted = 0
            ))
        )
        AND dp.resource_type = #{resourceType}
        <if test="resourceId != null">
            AND dp.resource_id = #{resourceId}
        </if>
        AND dp.permission_type = 'ROW'
        AND dp.status = 1
        AND dp.deleted = 0
    </select>

    <!-- 检查数据行访问权限 -->
    <select id="checkDataRowAccess" resultType="boolean">
        SELECT COUNT(1) > 0 FROM sys_data_permission dp
        WHERE (
            (dp.target_type = 'USER' AND dp.target_id = #{userId})
            OR
            (dp.target_type = 'ROLE' AND dp.target_id IN (
                SELECT ur.role_id FROM sys_user_role ur
                WHERE ur.user_id = #{userId} AND ur.deleted = 0
            ))
        )
        AND dp.resource_type = #{resourceType}
        AND dp.resource_id = #{resourceId}
        AND dp.permission_type = 'ROW'
        AND dp.status = 1
        AND dp.deleted = 0
    </select>

    <!-- 检查数据列访问权限 -->
    <select id="checkDataColumnAccess" resultType="boolean">
        SELECT COUNT(1) > 0 FROM sys_data_permission dp
        WHERE (
            (dp.target_type = 'USER' AND dp.target_id = #{userId})
            OR
            (dp.target_type = 'ROLE' AND dp.target_id IN (
                SELECT ur.role_id FROM sys_user_role ur
                WHERE ur.user_id = #{userId} AND ur.deleted = 0
            ))
        )
        AND dp.resource_type = #{resourceType}
        AND dp.resource_id = #{resourceId}
        AND dp.permission_type = 'COLUMN'
        AND JSON_CONTAINS(dp.column_filter, JSON_QUOTE(#{columnName}))
        AND dp.status = 1
        AND dp.deleted = 0
    </select>

    <!-- 清除数据权限缓存 -->
    <select id="clearDataPermissionCache" resultType="int">
        SELECT 1
    </select>

    <!-- 刷新数据权限缓存 -->
    <select id="refreshDataPermissionCache" resultType="int">
        SELECT 1
    </select>

</mapper>
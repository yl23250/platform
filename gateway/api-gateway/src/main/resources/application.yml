server:
  port: 8080

spring:
  application:
    name: api-gateway
  profiles:
    active: dev
  cloud:
    consul:
      host: localhost
      port: 8500
      discovery:
        service-name: ${spring.application.name}
        health-check-path: /actuator/health
        health-check-interval: 10s
        instance-id: ${spring.application.name}:${server.port}
        prefer-ip-address: true
    gateway:
      discovery:
        locator:
          enabled: true
          lower-case-service-id: true
      routes:
        # 用户服务路由
        - id: user-service
          uri: lb://user-service
          predicates:
            - Path=/api/user/**
          filters:
            - StripPrefix=1
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 10
                redis-rate-limiter.burstCapacity: 20
                redis-rate-limiter.requestedTokens: 1
        
        # 客户服务路由
        - id: customer-service
          uri: lb://customer-service
          predicates:
            - Path=/api/customer/**
          filters:
            - StripPrefix=1
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 10
                redis-rate-limiter.burstCapacity: 20
                redis-rate-limiter.requestedTokens: 1
        
        # 项目服务路由
        - id: project-service
          uri: lb://project-service
          predicates:
            - Path=/api/project/**
          filters:
            - StripPrefix=1
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 10
                redis-rate-limiter.burstCapacity: 20
                redis-rate-limiter.requestedTokens: 1
        
        # 合同服务路由
        - id: contract-service
          uri: lb://contract-service
          predicates:
            - Path=/api/contract/**
          filters:
            - StripPrefix=1
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 10
                redis-rate-limiter.burstCapacity: 20
                redis-rate-limiter.requestedTokens: 1
        
        # 订单服务路由
        - id: order-service
          uri: lb://order-service
          predicates:
            - Path=/api/order/**
          filters:
            - StripPrefix=1
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 10
                redis-rate-limiter.burstCapacity: 20
                redis-rate-limiter.requestedTokens: 1
      
      # 全局过滤器
      default-filters:
        - DedupeResponseHeader=Access-Control-Allow-Origin
        - DedupeResponseHeader=Access-Control-Allow-Credentials
        - AddResponseHeader=X-Response-Default-Foo, Default-Bar
  
  # Redis配置（用于限流）
  data:
    redis:
      host: localhost
      port: 6379
      password: 
      database: 0
      timeout: 6000ms
      lettuce:
        pool:
          max-active: 8
          max-wait: -1ms
          max-idle: 8
          min-idle: 0

# 管理端点配置
management:
  endpoints:
    web:
      exposure:
        include: health,info,gateway
  endpoint:
    health:
      show-details: always
    gateway:
      enabled: true

# 日志配置
logging:
  level:
    org.springframework.cloud.gateway: DEBUG
    org.springframework.web.reactive: DEBUG
    reactor.netty: DEBUG
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"

# JWT配置
jwt:
  secret: biobt-platform-jwt-secret-key-2024
  expiration: 86400000  # 24小时
  header: Authorization
  prefix: "Bearer "

# 网关配置
gateway:
  # 白名单路径（不需要认证）
  whitelist:
    - /api/user/auth/login
    - /api/user/auth/register
    - /api/user/auth/refresh
    - /actuator/**
    - /v3/api-docs/**
    - /swagger-ui/**
    - /swagger-resources/**
    - /webjars/**
  # 限流配置
  rate-limit:
    enabled: true
    default-capacity: 20
    default-tokens: 10
    default-seconds: 1